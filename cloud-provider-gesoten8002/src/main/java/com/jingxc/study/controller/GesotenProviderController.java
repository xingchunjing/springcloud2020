package com.jingxc.study.controller;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import com.jingxc.study.service.GesotenProviderService;import java.util.UUID;@RestControllerpublic class GesotenProviderController {    @Autowired    private GesotenProviderService gesotenProviderServiceImpl;    @Value("${server.port}")    private String serverPort;    @RequestMapping("/test/zk")    public String providerZk(){        return "springcloud with zookeeper" + serverPort + UUID.randomUUID().toString();    }    @RequestMapping("/test/co")    public String providerCo(){        return "springcloud with consul: " + serverPort + "\t" + UUID.randomUUID().toString();    }    @GetMapping("/test/nacos/{id}")    public String getPayment(@PathVariable("id") Integer id) {        return "nacos registry, serverPort: " + serverPort + "\tid "+ id+"\n"+UUID.randomUUID().toString();    }    @GetMapping("/test/feign/{id}")    public String providerFe(@PathVariable("id") Integer id) {        return "feign registry, serverPort: " + serverPort + "\tid "+ id+"\n"+UUID.randomUUID().toString();    }    @GetMapping("/test/hystrix/{id}")    public String providerHystrix(@PathVariable("id") Integer id) {        return gesotenProviderServiceImpl.providerHystrix(id);    }}